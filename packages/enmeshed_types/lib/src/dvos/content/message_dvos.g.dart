// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'message_dvos.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

RequestMessageDVO _$RequestMessageDVOFromJson(Map<String, dynamic> json) => RequestMessageDVO(
  id: json['id'] as String,
  name: json['name'] as String,
  description: json['description'] as String?,
  image: json['image'] as String?,
  type: json['type'] as String,
  date: json['date'] as String?,
  error: json['error'] == null ? null : DVOError.fromJson(json['error'] as Map<String, dynamic>),
  warning: json['warning'] == null ? null : DVOWarning.fromJson(json['warning'] as Map<String, dynamic>),
  createdByDevice: json['createdByDevice'] as String,
  createdAt: json['createdAt'] as String,
  createdBy: IdentityDVO.fromJson(json['createdBy'] as Map<String, dynamic>),
  recipients: (json['recipients'] as List<dynamic>).map((e) => RecipientDVO.fromJson(e as Map<String, dynamic>)).toList(),
  attachments: (json['attachments'] as List<dynamic>).map((e) => FileDVO.fromJson(e as Map<String, dynamic>)).toList(),
  isOwn: json['isOwn'] as bool,
  recipientCount: const IntegerConverter().fromJson((json['recipientCount'] as num).toInt()),
  attachmentCount: const IntegerConverter().fromJson((json['attachmentCount'] as num).toInt()),
  status: $enumDecode(_$MessageStatusEnumMap, json['status']),
  statusText: json['statusText'] as String,
  peer: IdentityDVO.fromJson(json['peer'] as Map<String, dynamic>),
  content: MessageContentDerivation.fromJson(json['content'] as Map<String, dynamic>),
  wasReadAt: json['wasReadAt'] as String?,
  request: LocalRequestDVO.fromJson(json['request'] as Map<String, dynamic>),
);

Map<String, dynamic> _$RequestMessageDVOToJson(RequestMessageDVO instance) => <String, dynamic>{
  'id': instance.id,
  'name': instance.name,
  'description': ?instance.description,
  'image': ?instance.image,
  'type': instance.type,
  'date': ?instance.date,
  'error': ?instance.error?.toJson(),
  'warning': ?instance.warning?.toJson(),
  'createdByDevice': instance.createdByDevice,
  'createdAt': instance.createdAt,
  'createdBy': instance.createdBy.toJson(),
  'recipients': instance.recipients.map((e) => e.toJson()).toList(),
  'attachments': instance.attachments.map((e) => e.toJson()).toList(),
  'isOwn': instance.isOwn,
  'recipientCount': const IntegerConverter().toJson(instance.recipientCount),
  'attachmentCount': const IntegerConverter().toJson(instance.attachmentCount),
  'status': _$MessageStatusEnumMap[instance.status]!,
  'statusText': instance.statusText,
  'peer': instance.peer.toJson(),
  'content': instance.content.toJson(),
  'wasReadAt': ?instance.wasReadAt,
  'request': instance.request.toJson(),
};

const _$MessageStatusEnumMap = {MessageStatus.Received: 'Received', MessageStatus.Delivering: 'Delivering', MessageStatus.Delivered: 'Delivered'};

RequestMessageErrorDVO _$RequestMessageErrorDVOFromJson(Map<String, dynamic> json) => RequestMessageErrorDVO(
  id: json['id'] as String,
  name: json['name'] as String,
  description: json['description'] as String?,
  image: json['image'] as String?,
  type: json['type'] as String,
  date: json['date'] as String?,
  error: json['error'] == null ? null : DVOError.fromJson(json['error'] as Map<String, dynamic>),
  warning: json['warning'] == null ? null : DVOWarning.fromJson(json['warning'] as Map<String, dynamic>),
  createdByDevice: json['createdByDevice'] as String,
  createdAt: json['createdAt'] as String,
  createdBy: IdentityDVO.fromJson(json['createdBy'] as Map<String, dynamic>),
  recipients: (json['recipients'] as List<dynamic>).map((e) => RecipientDVO.fromJson(e as Map<String, dynamic>)).toList(),
  attachments: (json['attachments'] as List<dynamic>).map((e) => FileDVO.fromJson(e as Map<String, dynamic>)).toList(),
  isOwn: json['isOwn'] as bool,
  recipientCount: const IntegerConverter().fromJson((json['recipientCount'] as num).toInt()),
  attachmentCount: const IntegerConverter().fromJson((json['attachmentCount'] as num).toInt()),
  status: $enumDecode(_$MessageStatusEnumMap, json['status']),
  statusText: json['statusText'] as String,
  peer: IdentityDVO.fromJson(json['peer'] as Map<String, dynamic>),
  content: MessageContentDerivation.fromJson(json['content'] as Map<String, dynamic>),
  wasReadAt: json['wasReadAt'] as String?,
  code: json['code'] as String,
  message: json['message'] as String,
);

Map<String, dynamic> _$RequestMessageErrorDVOToJson(RequestMessageErrorDVO instance) => <String, dynamic>{
  'id': instance.id,
  'name': instance.name,
  'description': ?instance.description,
  'image': ?instance.image,
  'type': instance.type,
  'date': ?instance.date,
  'error': ?instance.error?.toJson(),
  'warning': ?instance.warning?.toJson(),
  'createdByDevice': instance.createdByDevice,
  'createdAt': instance.createdAt,
  'createdBy': instance.createdBy.toJson(),
  'recipients': instance.recipients.map((e) => e.toJson()).toList(),
  'attachments': instance.attachments.map((e) => e.toJson()).toList(),
  'isOwn': instance.isOwn,
  'recipientCount': const IntegerConverter().toJson(instance.recipientCount),
  'attachmentCount': const IntegerConverter().toJson(instance.attachmentCount),
  'status': _$MessageStatusEnumMap[instance.status]!,
  'statusText': instance.statusText,
  'peer': instance.peer.toJson(),
  'content': instance.content.toJson(),
  'wasReadAt': ?instance.wasReadAt,
  'code': instance.code,
  'message': instance.message,
};

MailDVO _$MailDVOFromJson(Map<String, dynamic> json) => MailDVO(
  id: json['id'] as String,
  name: json['name'] as String,
  description: json['description'] as String?,
  image: json['image'] as String?,
  type: json['type'] as String,
  date: json['date'] as String?,
  error: json['error'] == null ? null : DVOError.fromJson(json['error'] as Map<String, dynamic>),
  warning: json['warning'] == null ? null : DVOWarning.fromJson(json['warning'] as Map<String, dynamic>),
  createdByDevice: json['createdByDevice'] as String,
  createdAt: json['createdAt'] as String,
  createdBy: IdentityDVO.fromJson(json['createdBy'] as Map<String, dynamic>),
  recipients: (json['recipients'] as List<dynamic>).map((e) => RecipientDVO.fromJson(e as Map<String, dynamic>)).toList(),
  attachments: (json['attachments'] as List<dynamic>).map((e) => FileDVO.fromJson(e as Map<String, dynamic>)).toList(),
  isOwn: json['isOwn'] as bool,
  recipientCount: const IntegerConverter().fromJson((json['recipientCount'] as num).toInt()),
  attachmentCount: const IntegerConverter().fromJson((json['attachmentCount'] as num).toInt()),
  status: $enumDecode(_$MessageStatusEnumMap, json['status']),
  statusText: json['statusText'] as String,
  peer: IdentityDVO.fromJson(json['peer'] as Map<String, dynamic>),
  content: MessageContentDerivation.fromJson(json['content'] as Map<String, dynamic>),
  wasReadAt: json['wasReadAt'] as String?,
  to: (json['to'] as List<dynamic>).map((e) => RecipientDVO.fromJson(e as Map<String, dynamic>)).toList(),
  cc: (json['cc'] as List<dynamic>).map((e) => RecipientDVO.fromJson(e as Map<String, dynamic>)).toList(),
  subject: json['subject'] as String,
  body: json['body'] as String,
  toCount: const IntegerConverter().fromJson((json['toCount'] as num).toInt()),
  ccCount: const IntegerConverter().fromJson((json['ccCount'] as num).toInt()),
);

Map<String, dynamic> _$MailDVOToJson(MailDVO instance) => <String, dynamic>{
  'id': instance.id,
  'name': instance.name,
  'description': ?instance.description,
  'image': ?instance.image,
  'type': instance.type,
  'date': ?instance.date,
  'error': ?instance.error?.toJson(),
  'warning': ?instance.warning?.toJson(),
  'createdByDevice': instance.createdByDevice,
  'createdAt': instance.createdAt,
  'createdBy': instance.createdBy.toJson(),
  'recipients': instance.recipients.map((e) => e.toJson()).toList(),
  'attachments': instance.attachments.map((e) => e.toJson()).toList(),
  'isOwn': instance.isOwn,
  'recipientCount': const IntegerConverter().toJson(instance.recipientCount),
  'attachmentCount': const IntegerConverter().toJson(instance.attachmentCount),
  'status': _$MessageStatusEnumMap[instance.status]!,
  'statusText': instance.statusText,
  'peer': instance.peer.toJson(),
  'content': instance.content.toJson(),
  'wasReadAt': ?instance.wasReadAt,
  'to': instance.to.map((e) => e.toJson()).toList(),
  'cc': instance.cc.map((e) => e.toJson()).toList(),
  'subject': instance.subject,
  'body': instance.body,
  'toCount': const IntegerConverter().toJson(instance.toCount),
  'ccCount': const IntegerConverter().toJson(instance.ccCount),
};
